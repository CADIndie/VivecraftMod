--- a/net/minecraft/world/entity/projectile/ThrownTrident.java
+++ b/net/minecraft/world/entity/projectile/ThrownTrident.java
@@ -22,6 +22,8 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.Vec3;
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
 
 public class ThrownTrident extends AbstractArrow
 {
@@ -75,16 +77,24 @@
             else
             {
                 this.setNoPhysics(true);
-                Vec3 vec3 = entity.getEyePosition().subtract(this.position());
-                this.setPosRaw(this.getX(), this.getY() + vec3.y * 0.015D * (double)i, this.getZ());
+                Vec3 vec3 = new Vec3(entity.getX(), entity.getEyeY(), entity.getZ());
+                ServerVivePlayer serverviveplayer = NetworkHelper.vivePlayers.get(entity.getUUID());
 
+                if (serverviveplayer != null && serverviveplayer.isVR())
+                {
+                	vec3 = serverviveplayer.getControllerPos(0, (Player)entity);
+                }
+
+                Vec3 vec31 = new Vec3(vec3.x - this.getX(), vec3.y - this.getY(), vec3.z - this.getZ());
+                this.setPosRaw(this.getX(), this.getY() + vec31.y * 0.015D * (double)i, this.getZ());
+                  
                 if (this.level.isClientSide)
                 {
                     this.yOld = this.getY();
                 }
 
                 double d0 = 0.05D * (double)i;
-                this.setDeltaMovement(this.getDeltaMovement().scale(0.95D).add(vec3.normalize().scale(d0)));
+                this.setDeltaMovement(this.getDeltaMovement().scale(0.95D).add(vec31.normalize().scale(d0)));
 
                 if (this.clientSideReturnTridentTickCount == 0)
                 {
