--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -62,7 +62,11 @@
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
+import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import net.optifine.reflect.Reflector;
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
 
 public class EnderMan extends Monster implements NeutralMob
 {
@@ -130,6 +134,8 @@
                 attributeinstance.addTransientModifier(SPEED_MODIFIER_ATTACKING);
             }
         }
+
+        super.setTarget(pLivingEntity);
     }
 
     protected void defineSynchedData()
@@ -312,6 +318,7 @@
         return this.teleport(d1, d2, d3);
     }
 
+    //cursed params
     private boolean teleport(double pX, double p_32545_, double pY)
     {
         BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(pX, p_32545_, pY);
@@ -327,6 +334,19 @@
 
         if (flag && !flag1)
         {
+            Object object = Reflector.call(Reflector.ForgeEventFactory_onEnderTeleport, this, pX, p_32545_, pY);
+
+            if (object != null)
+            {
+                if (Reflector.callBoolean(object, Reflector.EnderTeleportEvent_isCanceled))
+                {
+                    return false;
+                }
+
+                pX = Reflector.callDouble(object, Reflector.EnderTeleportEvent_getTargetX);
+                p_32545_ = Reflector.callDouble(object, Reflector.EnderTeleportEvent_getTargetY);
+                pY = Reflector.callDouble(object, Reflector.EnderTeleportEvent_getTargetZ);
+            }
             boolean flag2 = this.randomTeleport(pX, p_32545_, pY, true);
 
             if (flag2 && !this.isSilent())
@@ -501,11 +521,18 @@
 
         public boolean canUse()
         {
+            boolean flag = !this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING);
+
+            if (Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+            {
+                flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.level, this.enderman);
+            }
+
             if (this.enderman.getCarriedBlock() == null)
             {
                 return false;
             }
-            else if (!this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))
+            else if (flag)
             {
                 return false;
             }
@@ -527,8 +554,10 @@
             BlockPos blockpos1 = blockpos.below();
             BlockState blockstate1 = level.getBlockState(blockpos1);
             BlockState blockstate2 = this.enderman.getCarriedBlock();
+            Object object = Reflector.call(Reflector.BlockSnapshot_create, level.dimension(), level, blockpos);
+            boolean flag = Reflector.callBoolean(Reflector.ForgeEventFactory_onBlockPlace, this.enderman, object, Direction.UP);
 
-            if (blockstate2 != null)
+            if (blockstate2 != null && !flag)
             {
                 blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level, blockpos);
 
@@ -657,11 +686,18 @@
 
         public boolean canUse()
         {
+            boolean flag = !this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING);
+
+            if (Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+            {
+                flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.level, this.enderman);
+            }
+
             if (this.enderman.getCarriedBlock() != null)
             {
                 return false;
             }
-            else if (!this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))
+            else if (!flag)
             {
                 return false;
             }
