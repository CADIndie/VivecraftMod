--- a/net/minecraft/client/gui/screens/PauseScreen.java
+++ b/net/minecraft/client/gui/screens/PauseScreen.java
@@ -1,13 +1,23 @@
 package net.minecraft.client.gui.screens;
 
+import org.vivecraft.gameplay.screenhandlers.KeyboardHandler;
+import org.vivecraft.gui.settings.GuiQuickCommandsInGame;
+import org.vivecraft.settings.AutoCalibration;
+import org.vivecraft.settings.VRHotkeys;
+import org.vivecraft.settings.VRSettings;
+import org.vivecraft.utils.external.jkatvr;
+
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.realmsclient.RealmsMainScreen;
 import net.minecraft.SharedConstants;
 import net.minecraft.Util;
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.screens.achievement.StatsScreen;
 import net.minecraft.client.gui.screens.advancements.AdvancementsScreen;
 import net.minecraft.client.gui.screens.multiplayer.JoinMultiplayerScreen;
+import net.minecraft.client.gui.screens.social.SocialInteractionsScreen;
+import net.minecraft.client.main.Main;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.Component;
 
@@ -30,6 +40,86 @@
         {
             this.createPauseMenu();
         }
+
+        if (!Minecraft.getInstance().isMultiplayerServer())
+        {
+            this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 72 + -16, 98, 20, Component.translatable("vivecraft.gui.chat"), (p) ->
+            {
+                this.minecraft.setScreen(new ChatScreen(""));
+                if (dataholder.vrSettings.autoOpenKeyboard)
+                	KeyboardHandler.setOverlayShowing(true);
+            }));
+        }
+        else
+        {
+            this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 72 + -16, 46, 20, Component.translatable("vivecraft.gui.chat"), (p) ->
+            {
+                this.minecraft.setScreen(new ChatScreen(""));
+            }));
+            this.addRenderableWidget(new Button(this.width / 2 - 102 + 48, this.height / 4 + 72 + -16, 46, 20, Component.translatable("vivecraft.gui.social"), (p) ->
+            {
+                this.minecraft.setScreen(new SocialInteractionsScreen());
+            }));
+        }
+
+        this.addRenderableWidget(new Button(this.width / 2 + 4, this.height / 4 + 72 + -16, 98, 20, Component.translatable("vivecraft.gui.commands"), (p) ->
+        {
+            this.minecraft.setScreen(new GuiQuickCommandsInGame(this));
+            this.init();
+        }));
+        this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 120 + -16, 49, 20, Component.translatable("vivecraft.gui.overlay"), (p) ->
+        {
+            this.minecraft.options.renderDebug = !this.minecraft.options.renderDebug;
+            this.minecraft.setScreen((Screen)null);
+        }));
+        this.addRenderableWidget(new Button(this.width / 2 - 52, this.height / 4 + 120 + -16, 49, 20, Component.translatable("vivecraft.gui.profiler"), (p) ->
+        {
+        	if (!this.minecraft.options.renderDebug) this.minecraft.options.renderDebugCharts = false;
+            this.minecraft.options.renderDebugCharts = !this.minecraft.options.renderDebugCharts;
+            this.minecraft.options.ofProfiler = this.minecraft.options.renderDebugCharts;
+            this.minecraft.options.renderDebug = this.minecraft.options.renderDebugCharts;
+            this.minecraft.setScreen((Screen)null);
+        }));
+        this.addRenderableWidget(new Button(this.width / 2 + 4, this.height / 4 + 120 + -16, 98, 20, Component.translatable("vivecraft.gui.screenshot"), (p) ->
+        {
+            this.minecraft.setScreen((Screen)null);
+            this.minecraft.grabScreenShot = true;
+        }));
+
+        if (!this.dataholder.vrSettings.seated)
+        {
+            this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 144 + -16, 98, 20, Component.translatable("vivecraft.gui.calibrateheight"), (p) ->
+            {
+                AutoCalibration.calibrateManual();
+                this.dataholder.vrSettings.saveOptions();
+                this.minecraft.setScreen((Screen)null);
+            }));
+        }
+
+        if (Main.katvr)
+        {
+            this.addRenderableWidget(new Button(this.width / 2 + 106, this.height / 4 + 144 + -16, 98, 20, Component.translatable("vivecraft.gui.alignkatwalk"), (p) ->
+            {
+                jkatvr.resetYaw(this.minecraft.vrPlayer.vrdata_room_pre.hmd.getYaw());
+                this.minecraft.setScreen((Screen)null);
+            }));
+        }
+
+        if (!this.dataholder.vrSettings.seated || this.dataholder.vrSettings.displayMirrorMode == VRSettings.MirrorMode.THIRD_PERSON || this.dataholder.vrSettings.displayMirrorMode == VRSettings.MirrorMode.MIXED_REALITY)
+        {
+            this.addRenderableWidget(new Button(this.width / 2 + 4, this.height / 4 + 144 + -16, 98, 20, Component.translatable("vivecraft.gui.movethirdpersoncam"), (p) ->
+            {
+                if (!VRHotkeys.isMovingThirdPersonCam())
+                {
+                    VRHotkeys.startMovingThirdPersonCam(1, VRHotkeys.Triggerer.MENUBUTTON);
+                }
+                else if (VRHotkeys.getMovingThirdPersonCamTriggerer() == VRHotkeys.Triggerer.MENUBUTTON)
+                {
+                    VRHotkeys.stopMovingThirdPersonCam();
+                    this.dataholder.vrSettings.saveOptions();
+                }
+            }));
+        }
     }
 
     private void createPauseMenu()
@@ -49,29 +139,29 @@
         {
             this.minecraft.setScreen(new StatsScreen(this, this.minecraft.player.getStats()));
         }));
-        String s = SharedConstants.getCurrentVersion().isStable() ? "https://aka.ms/javafeedback?ref=game" : "https://aka.ms/snapshotfeedback?ref=game";
-        this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 72 + -16, 98, 20, Component.translatable("menu.sendFeedback"), (p_96318_) ->
-        {
-            this.minecraft.setScreen(new ConfirmLinkScreen((p_169337_) -> {
-                if (p_169337_)
-                {
-                    Util.getPlatform().openUri(s);
-                }
-
-                this.minecraft.setScreen(this);
-            }, s, true));
-        }));
-        this.addRenderableWidget(new Button(this.width / 2 + 4, this.height / 4 + 72 + -16, 98, 20, Component.translatable("menu.reportBugs"), (p_96331_) ->
-        {
-            this.minecraft.setScreen(new ConfirmLinkScreen((p_169339_) -> {
-                if (p_169339_)
-                {
-                    Util.getPlatform().openUri("https://aka.ms/snapshotbugs?ref=game");
-                }
-
-                this.minecraft.setScreen(this);
-            }, "https://aka.ms/snapshotbugs?ref=game", true));
-        }));
+//        String s = SharedConstants.getCurrentVersion().isStable() ? "https://aka.ms/javafeedback?ref=game" : "https://aka.ms/snapshotfeedback?ref=game";
+//        this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 72 + -16, 98, 20, Component.translatable("menu.sendFeedback"), (p_96318_) ->
+//        {
+//            this.minecraft.setScreen(new ConfirmLinkScreen((p_169337_) -> {
+//                if (p_169337_)
+//                {
+//                    Util.getPlatform().openUri(s);
+//                }
+//
+//                this.minecraft.setScreen(this);
+//            }, s, true));
+//        }));
+//        this.addRenderableWidget(new Button(this.width / 2 + 4, this.height / 4 + 72 + -16, 98, 20, Component.translatable("menu.reportBugs"), (p_96331_) ->
+//        {
+//            this.minecraft.setScreen(new ConfirmLinkScreen((p_169339_) -> {
+//                if (p_169339_)
+//                {
+//                    Util.getPlatform().openUri("https://aka.ms/snapshotbugs?ref=game");
+//                }
+//
+//                this.minecraft.setScreen(this);
+//            }, "https://aka.ms/snapshotbugs?ref=game", true));
+//        }));
         this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 96 + -16, 98, 20, Component.translatable("menu.options"), (p_96323_) ->
         {
             this.minecraft.setScreen(new OptionsScreen(this, this.minecraft.options));
@@ -82,7 +172,9 @@
         }));
         button.active = this.minecraft.hasSingleplayerServer() && !this.minecraft.getSingleplayerServer().isPublished();
         Component component = this.minecraft.isLocalServer() ? Component.translatable("menu.returnToMenu") : Component.translatable("menu.disconnect");
-        this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 120 + -16, 204, 20, component, (p_96315_) ->
+
+        //vivecraft move down
+        this.addRenderableWidget(new Button(this.width / 2 - 102, this.height / 4 + 168 + -16, 204, 20, component, (p_96315_) ->
         {
             boolean flag = this.minecraft.isLocalServer();
             boolean flag1 = this.minecraft.isConnectedToRealms();
