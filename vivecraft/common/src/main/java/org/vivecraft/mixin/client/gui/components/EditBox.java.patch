--- a/net/minecraft/client/gui/components/EditBox.java
+++ b/net/minecraft/client/gui/components/EditBox.java
@@ -20,6 +20,7 @@
 import net.minecraft.client.gui.components.events.GuiEventListener;
 import net.minecraft.client.gui.narration.NarratedElementType;
 import net.minecraft.client.gui.narration.NarrationElementOutput;
+import net.minecraft.client.gui.screens.InBedChatScreen;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.network.chat.Component;
@@ -28,6 +29,7 @@
 import net.minecraft.network.chat.Component;
 import net.minecraft.util.FormattedCharSequence;
 import net.minecraft.util.Mth;
+import org.vivecraft.gameplay.screenhandlers.KeyboardHandler;
 
 public class EditBox extends AbstractWidget implements Widget, GuiEventListener
 {
@@ -58,9 +60,9 @@
     @Nullable
     private Consumer<String> responder;
     private Predicate<String> filter = Objects::nonNull;
-    private BiFunction<String, Integer, FormattedCharSequence> formatter = (p_94147_, p_94148_) ->
+    private BiFunction<String, Integer, FormattedCharSequence> formatter = (p_195610_0_, p_195610_1_) ->
     {
-        return FormattedCharSequence.forward(p_94147_, Style.EMPTY);
+        return FormattedCharSequence.forward(p_195610_0_, Style.EMPTY);
     };
 
     public EditBox(Font pFont, int pX, int pY, int pWidth, int pHeight, Component p_94119_)
@@ -458,11 +460,19 @@
         {
             boolean flag = pMouseX >= (double)this.x && pMouseX < (double)(this.x + this.width) && p_94126_ >= (double)this.y && p_94126_ < (double)(this.y + this.height);
 
-            if (this.canLoseFocus)
+            // Vivecraft - allow focusing unfocused textbox
+            if (this.canLoseFocus || !this.isFocused())
             {
                 this.setFocus(flag);
             }
 
+            //Vivecraft
+            if (flag)
+            {
+                KeyboardHandler.setOverlayShowing(true);
+            }
+            //
+
             if (this.isFocused() && flag && pMouseY == 0)
             {
                 int i = Mth.floor(pMouseX) - this.x;
@@ -519,6 +529,12 @@
                 String s1 = flag ? s.substring(0, j) : s;
                 j1 = this.font.drawShadow(pPoseStack, this.formatter.apply(s1, this.displayPos), (float)l, (float)i1, i2);
             }
+            //Vivecraft
+            else if (!Minecraft.getInstance().vrSettings.seated && !KeyboardHandler.Showing)
+            {
+                this.font.drawShadow(pPoseStack, "Click to open keyboard", (float)l, (float)i1, this.textColorUneditable);
+            }
+            //
 
             boolean flag2 = this.cursorPos < this.value.length() || this.value.length() >= this.getMaxLength();
             int k1 = j1;
@@ -663,6 +679,17 @@
         if (pFocused)
         {
             this.frame = 0;
+            //Vivecraft
+            if (Minecraft.getInstance().screen instanceof InBedChatScreen)
+            {
+                return;
+            }
+
+            if (Minecraft.getInstance().vrSettings.autoOpenKeyboard)
+            {
+                KeyboardHandler.setOverlayShowing(true);
+            }
+            //
         }
     }
 
@@ -717,7 +744,8 @@
 
     public void setCanLoseFocus(boolean pCanLoseFocus)
     {
-        this.canLoseFocus = pCanLoseFocus;
+    	//Vivecraft - I don't care what you think.
+        this.canLoseFocus = false;
     }
 
     public boolean isVisible()
